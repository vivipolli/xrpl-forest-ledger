import { ADAPTER_CATEGORY_TYPE, ADAPTER_STATUS_TYPE, AdapterInitOptions, AdapterNamespaceType, BaseAdapterSettings, ChainNamespaceType, CustomChainConfig, IProvider, UserInfo } from "@web3auth/base";
import { BaseSolanaAdapter } from "@web3auth/base-solana-adapter";
import { IPhantomWalletProvider } from "@web3auth/solana-provider";
export type PhantomAdapterOptions = BaseAdapterSettings;
export declare class PhantomAdapter extends BaseSolanaAdapter<void> {
    readonly name: string;
    readonly adapterNamespace: AdapterNamespaceType;
    readonly currentChainNamespace: ChainNamespaceType;
    readonly type: ADAPTER_CATEGORY_TYPE;
    status: ADAPTER_STATUS_TYPE;
    _wallet: IPhantomWalletProvider | null;
    private phantomProvider;
    get isWalletConnected(): boolean;
    get provider(): IProvider | null;
    set provider(_: IProvider | null);
    init(options?: AdapterInitOptions): Promise<void>;
    connect(): Promise<IProvider | null>;
    disconnect(options?: {
        cleanup: boolean;
    }): Promise<void>;
    getUserInfo(): Promise<Partial<UserInfo>>;
    addChain(chainConfig: CustomChainConfig, init?: boolean): Promise<void>;
    switchChain(params: {
        chainId: string;
    }, init?: boolean): Promise<void>;
    enableMFA(): Promise<void>;
    private connectWithProvider;
    private _onDisconnect;
}
