import _objectSpread from '@babel/runtime/helpers/objectSpread2';
import { CHAIN_NAMESPACES, WalletInitializationError, getChainConfig } from '@web3auth/base';
import { WalletConnectV2Adapter } from '@web3auth/wallet-connect-v2-adapter';
import { getInjectedAdapters } from './injectedAdapters.js';

const getDefaultExternalAdapters = params => {
  const {
    options
  } = params;
  const {
    clientId,
    chainConfig,
    sessionTime,
    web3AuthNetwork,
    useCoreKitKey
  } = options;
  if (!Object.values(CHAIN_NAMESPACES).includes(chainConfig.chainNamespace)) throw WalletInitializationError.invalidParams(`Invalid chainNamespace: ${chainConfig.chainNamespace}`);
  const finalChainConfig = _objectSpread(_objectSpread({}, getChainConfig(chainConfig.chainNamespace, chainConfig === null || chainConfig === void 0 ? void 0 : chainConfig.chainId, clientId)), chainConfig || {});
  const wcv2Adapter = new WalletConnectV2Adapter({
    chainConfig: finalChainConfig,
    clientId,
    sessionTime,
    web3AuthNetwork,
    useCoreKitKey,
    adapterSettings: {
      walletConnectInitOptions: {}
    }
  });
  const injectedProviders = getInjectedAdapters({
    options
  });
  return [...injectedProviders, wcv2Adapter];
};

export { getDefaultExternalAdapters, getInjectedAdapters };
