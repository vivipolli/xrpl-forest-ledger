import type { ISignClient } from "@walletconnect/types";
import type { AddEthereumChainParameter, IProviderHandlers as EthProviderHandlers } from "@web3auth/ethereum-provider";
import type { IProviderHandlers as SolProviderHandlers } from "@web3auth/solana-provider";
export declare function sendJrpcRequest<T, U>(signClient: ISignClient, chainId: string, method: string, params: U): Promise<T>;
export declare function getAccounts(signClient: ISignClient): Promise<string[]>;
export declare function getEthProviderHandlers({ connector, chainId }: {
    connector: ISignClient;
    chainId: number;
}): EthProviderHandlers;
export declare function getSolProviderHandlers({ connector, chainId }: {
    connector: ISignClient;
    chainId: string;
}): SolProviderHandlers;
export declare function switchChain({ connector, chainId, newChainId, }: {
    connector: ISignClient;
    chainId: number;
    newChainId: string;
}): Promise<void>;
export declare function addChain({ connector, chainId, chainConfig, }: {
    connector: ISignClient;
    chainId: number;
    chainConfig: AddEthereumChainParameter;
}): Promise<void>;
