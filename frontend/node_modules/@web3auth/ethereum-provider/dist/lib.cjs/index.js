'use strict';

var EthereumPrivateKeyProvider = require('./providers/privateKeyProviders/EthereumPrivateKeyProvider.js');
var ethPrivatekeyUtils = require('./providers/privateKeyProviders/ethPrivatekeyUtils.js');
var constants = require('./providers/privateKeyProviders/TransactionFormatter/constants.js');
var formatter = require('./providers/privateKeyProviders/TransactionFormatter/formatter.js');
var interfaces = require('./providers/privateKeyProviders/TransactionFormatter/interfaces.js');
var utils = require('./providers/privateKeyProviders/TransactionFormatter/utils.js');
var ethRpcMiddlewares = require('./rpc/ethRpcMiddlewares.js');
var jrpcClient = require('./rpc/jrpcClient.js');
var walletMidddleware = require('./rpc/walletMidddleware.js');



exports.EthereumPrivateKeyProvider = EthereumPrivateKeyProvider.EthereumPrivateKeyProvider;
exports.getProviderHandlers = ethPrivatekeyUtils.getProviderHandlers;
exports.EIP1559APIEndpoint = constants.EIP1559APIEndpoint;
exports.GAS_ESTIMATE_TYPES = constants.GAS_ESTIMATE_TYPES;
exports.LegacyGasAPIEndpoint = constants.LegacyGasAPIEndpoint;
exports.TRANSACTION_ENVELOPE_TYPES = constants.TRANSACTION_ENVELOPE_TYPES;
exports.TRANSACTION_TYPES = constants.TRANSACTION_TYPES;
exports.TransactionFormatter = formatter.TransactionFormatter;
exports.SignTypedDataVersion = interfaces.SignTypedDataVersion;
exports.fetchEip1159GasEstimates = utils.fetchEip1159GasEstimates;
exports.fetchLegacyGasPriceEstimates = utils.fetchLegacyGasPriceEstimates;
exports.normalizeGWEIDecimalNumbers = utils.normalizeGWEIDecimalNumbers;
exports.validateAddress = utils.validateAddress;
exports.validateTypedSignMessageDataV4 = utils.validateTypedSignMessageDataV4;
exports.createAccountMiddleware = ethRpcMiddlewares.createAccountMiddleware;
exports.createChainSwitchMiddleware = ethRpcMiddlewares.createChainSwitchMiddleware;
exports.createEthMiddleware = ethRpcMiddlewares.createEthMiddleware;
exports.createChainIdMiddleware = jrpcClient.createChainIdMiddleware;
exports.createJsonRpcClient = jrpcClient.createJsonRpcClient;
exports.createProviderConfigMiddleware = jrpcClient.createProviderConfigMiddleware;
exports.createWalletMiddleware = walletMidddleware.createWalletMiddleware;
