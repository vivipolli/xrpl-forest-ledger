{"version":3,"file":"torus.cjs.js","mappings":"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","sources":["webpack://@toruslabs/xrpl-embed/webpack/bootstrap","webpack://@toruslabs/xrpl-embed/webpack/runtime/compat get default export","webpack://@toruslabs/xrpl-embed/webpack/runtime/define property getters","webpack://@toruslabs/xrpl-embed/webpack/runtime/hasOwnProperty shorthand","webpack://@toruslabs/xrpl-embed/webpack/runtime/make namespace object","webpack://@toruslabs/xrpl-embed/external commonjs2 \"@babel/runtime/helpers/defineProperty\"","webpack://@toruslabs/xrpl-embed/external commonjs2 \"@toruslabs/base-controllers\"","webpack://@toruslabs/xrpl-embed/external commonjs2 \"@toruslabs/http-helpers\"","webpack://@toruslabs/xrpl-embed/external commonjs2 \"@toruslabs/openlogin-jrpc\"","webpack://@toruslabs/xrpl-embed/./src/interfaces.ts","webpack://@toruslabs/xrpl-embed/external commonjs2 \"eth-rpc-errors\"","webpack://@toruslabs/xrpl-embed/external commonjs2 \"is-stream\"","webpack://@toruslabs/xrpl-embed/external commonjs2 \"pump\"","webpack://@toruslabs/xrpl-embed/./src/messages.ts","webpack://@toruslabs/xrpl-embed/./src/config.ts","webpack://@toruslabs/xrpl-embed/external commonjs2 \"loglevel\"","webpack://@toruslabs/xrpl-embed/./src/loglevel.ts","webpack://@toruslabs/xrpl-embed/./src/utils.ts","webpack://@toruslabs/xrpl-embed/./src/baseProvider.ts","webpack://@toruslabs/xrpl-embed/./src/embedUtils.ts","webpack://@toruslabs/xrpl-embed/./src/PopupHandler.ts","webpack://@toruslabs/xrpl-embed/./src/communicationProvider.ts","webpack://@toruslabs/xrpl-embed/external commonjs2 \"fast-deep-equal\"","webpack://@toruslabs/xrpl-embed/./src/inPageProvider.ts","webpack://@toruslabs/xrpl-embed/./src/siteMetadata.ts","webpack://@toruslabs/xrpl-embed/./src/embed.ts","webpack://@toruslabs/xrpl-embed/./src/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@babel/runtime/helpers/defineProperty\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/base-controllers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/http-helpers\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"@toruslabs/openlogin-jrpc\");","import { PAYMENT_PROVIDER } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nexport const TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\",\n} as const;\n\nexport type PAYMENT_PROVIDER_TYPE = (typeof PAYMENT_PROVIDER)[keyof typeof PAYMENT_PROVIDER];\n\nexport type TORUS_BUILD_ENV_TYPE = (typeof TORUS_BUILD_ENV)[keyof typeof TORUS_BUILD_ENV];\n\nexport const BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\",\n} as const;\n\nexport type EMBED_TRANSLATION_ITEM = {\n  continue: string;\n  actionRequired: string;\n  pendingAction: string;\n  cookiesRequired: string;\n  enableCookies: string;\n  clickHere: string;\n};\n\nexport type BUTTON_POSITION_TYPE = (typeof BUTTON_POSITION)[keyof typeof BUTTON_POSITION];\n\nexport type WALLET_PATH = \"transfer\" | \"topup\" | \"home\" | \"settings\" | \"history\";\n\nexport const LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\",\n} as const;\n\nexport type LOGIN_PROVIDER_TYPE = (typeof LOGIN_PROVIDER)[keyof typeof LOGIN_PROVIDER];\n\nexport interface TorusCtorArgs {\n  /**\n   * Z-index of the modal and iframe\n   * @defaultValue 99999\n   */\n  modalZIndex?: number;\n}\n\nexport interface NetworkInterface {\n  /**\n   * Block explorer url for the chain\n   * @example https://ropsten.etherscan.io\n   */\n  blockExplorerUrl: string;\n  /**\n   * Logo url for the base token\n   */\n  logo: string;\n  /**\n   * Name for ticker\n   * @example 'Binance Token', 'Ethereum', 'Matic Network Token'\n   */\n  tickerName: string;\n  /**\n   * Symbol for ticker\n   * @example BNB, ETH\n   */\n  ticker: string;\n  /**\n   * RPC target Url for the chain\n   * @example https://ropsten.infura.io/v3/YOUR_API_KEY\n   */\n  rpcTarget: string;\n  /**\n   * Chain Id parameter(hex with 0x prefix) for the network. Mandatory for all networks. (assign one with a map to network identifier for platforms)\n   * @example 0x1 for mainnet, 'loading' if not connected to anything yet or connection fails\n   * @defaultValue 'loading'\n   */\n  chainId: string;\n  /**\n   * Display name for the network\n   */\n  displayName: string;\n\n  /**\n   * xrpl Network Key\n   */\n  networkKey: string;\n}\n\nexport interface PaymentParams {\n  /**\n   * Address to send the funds to\n   */\n  selectedAddress?: string;\n  /**\n   * Default fiat currency for the user to make the payment in\n   */\n  selectedCurrency?: string;\n  // /**\n  //  * Amount to buy in the selectedCurrency\n  //  */\n  // fiatValue?: number;\n  /**\n   * Cryptocurrency to buy\n   */\n  selectedCryptoCurrency?: string;\n  /**\n   * Amount Cryptocurrency to buy\n   */\n  cryptoAmount?: number;\n}\nexport interface SignMessageParams {\n  message: string;\n  from: string;\n}\nexport interface TransactionJSONType {\n  [Field: string]: string | number | Array<unknown> | undefined | object | boolean;\n  Sequence?: number;\n  Account?: string;\n  Destination?: string;\n  TransactionType?: string;\n  Memos?: {\n    Memo: {\n      MemoType?: string;\n      MemoData?: string;\n      MemoFormat?: string;\n    };\n  }[];\n  Flags?: number;\n  Fulfillment?: string;\n  LastLedgerSequence?: number;\n}\nexport interface LoginParams {\n  loginProvider?: string;\n}\n\nexport interface UserInfo {\n  /**\n   * Email of the logged in user\n   */\n  email: string;\n  /**\n   * Full name of the logged in user\n   */\n  name: string;\n  /**\n   * Profile image of the logged in user\n   */\n  profileImage: string;\n  /**\n   * verifier of the logged in user (google, facebook etc)\n   */\n  verifier: string;\n  /**\n   * Verifier Id of the logged in user\n   *\n   * email for google,\n   * id for facebook,\n   * username for reddit,\n   * id for twitch,\n   * id for discord\n   */\n  verifierId: string;\n}\n\nexport interface LocaleLinks<T> {\n  /**\n   * Item corresponding to english\n   */\n  en?: T;\n  /**\n   * Item corresponding to japanese\n   */\n  ja?: T;\n  /**\n   * Item corresponding to korean\n   */\n  ko?: T;\n  /**\n   * Item corresponding to german\n   */\n  de?: T;\n  /**\n   * Item corresponding to chinese (simplified)\n   */\n  zh?: T;\n  /**\n   * Item corresponding to spanish\n   */\n  es?: T;\n}\n\nexport interface TorusParams {\n  /**\n   * Determines where the torus widget is visible on the page.\n   * @defaultValue bottom-left\n   */\n  buttonPosition?: BUTTON_POSITION_TYPE;\n  /**\n   * Api key\n   * Get yours today at {@link https://developer.tor.us | Dashboard}\n   */\n  apiKey?: string;\n\n  /**\n   * Torus Network Object\n   */\n  network?: NetworkInterface;\n  /**\n   * Build Environment of Torus.\n   *\n   * production uses https://xrpl.tor.us,\n   *\n   * development uses http://localhost:4050 (expects torus-website to be run locally),\n   *\n   * testing uses https://xrpl-testing.tor.us (latest internal build)\n   * @defaultValue production\n   */\n  buildEnv?: TORUS_BUILD_ENV_TYPE;\n  /**\n   * Enables or disables logging.\n   *\n   * Defaults to false in prod and true in other environments\n   */\n  enableLogging?: boolean;\n  /**\n   * whether to show/hide torus widget.\n   *\n   * Defaults to true\n   * @defaultValue true\n   */\n  showTorusButton?: boolean;\n  /**\n   * Prefers to use localStorage instead of sessionStorage for torus iframe. Allows longer lived sessions\n   *\n   * Defaults to false\n   * @defaultValue false\n   */\n  useLocalStorage?: boolean;\n}\n\nexport interface ProviderOptions {\n  /**\n   * The name of the stream used to connect to the wallet.\n   */\n  jsonRpcStreamName?: string;\n\n  /**\n   * The maximum number of event listeners.\n   */\n  maxEventListeners?: number;\n}\n\nexport interface BaseProviderState {\n  isConnected: boolean;\n  initialized: boolean;\n  isPermanentlyDisconnected: boolean;\n  hasEmittedConnection: boolean;\n}\n\nexport interface InPageProviderState extends BaseProviderState {\n  accounts: null | string[];\n  isUnlocked: boolean;\n}\n\nexport interface CommunicationProviderState extends BaseProviderState {\n  buttonPosition: string;\n  isLoggedIn: boolean;\n  torusWidgetVisibility: boolean;\n  currentLoginProvider: LOGIN_PROVIDER_TYPE;\n  isIFrameFullScreen: boolean;\n}\n\nexport type Maybe<T> = Partial<T> | T | null | undefined;\n\nexport interface UnValidatedJsonRpcRequest extends JRPCRequest<unknown> {\n  windowId?: string;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"eth-rpc-errors\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"is-stream\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"pump\");","export default {\n  errors: {\n    disconnected: (): string => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: (): string => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: (method: string): string =>\n      `Torus: The Torus Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: (): string => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: (maxEventListeners: number): string => `Invalid options. Received: { maxEventListeners: ${maxEventListeners}}`,\n    invalidRequestArgs: (): string => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: (): string => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: (): string => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: (): string => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method: string): string => `'args.logger' must include required method '${method}'.`,\n  },\n  info: {\n    connected: (chainId: string): string => `Torus: Connected to chain with ID \"${chainId}\".`,\n  },\n  warnings: {},\n};\n","import { EMBED_TRANSLATION_ITEM, LocaleLinks, LOGIN_PROVIDER } from \"./interfaces\";\n\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\",\n    },\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\",\n    },\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\",\n    },\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\",\n    },\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\",\n    },\n  },\n} as LocaleLinks<{ embed: EMBED_TRANSLATION_ITEM }>;\n\nexport default {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: `torus-${window.location.hostname}`,\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"loglevel\");","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"xrpl-embed\");\n","import { JRPCMiddleware, SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { LogLevelDesc } from \"loglevel\";\n\nimport config from \"./config\";\nimport log from \"./loglevel\";\n\n// utility functions\n\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\nexport function createErrorMiddleware(): JRPCMiddleware<unknown, unknown> {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: req,\n      });\n    }\n\n    next((done) => {\n      const { error } = res;\n      if (!error) {\n        return done();\n      }\n      log.error(`Torus - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\n\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\nexport function logStreamDisconnectWarning(remoteLabel: string, error: Error, emitter: SafeEventEmitter): void {\n  let warningMsg = `Torus: Lost connection to \"${remoteLabel}\".`;\n  if (error?.stack) {\n    warningMsg += `\\n${error.stack}`;\n  }\n  log.warn(warningMsg);\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nexport const getWindowId = (): string => Math.random().toString(36).slice(2);\n\nexport const getTorusUrl = async (buildEnv: string): Promise<{ torusUrl: string; logLevel: LogLevelDesc }> => {\n  let torusUrl: string;\n  let logLevel: LogLevelDesc;\n  // const versionUsed = version;\n  // log.info(\"xrpl embed version used: \", versionUsed);\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://xrpl-test.tor.us\";\n      logLevel = \"debug\";\n      break;\n    case \"development\":\n      torusUrl = \"http://localhost:4050\";\n      logLevel = \"debug\";\n      break;\n    default:\n      torusUrl = `https://xrpl.tor.us`;\n      logLevel = \"error\";\n      break;\n  }\n  return { torusUrl, logLevel };\n};\n\nexport const getUserLanguage = (): string => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(config.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nexport const NOOP = (): void => {\n  // empty function\n};\n\nexport const FEATURES_PROVIDER_CHANGE_WINDOW = { height: 660, width: 375 };\nexport const FEATURES_DEFAULT_WALLET_WINDOW = { height: 740, width: 1315 };\nexport const FEATURES_DEFAULT_POPUP_WINDOW = { height: 700, width: 1200 };\nexport const FEATURES_CONFIRM_WINDOW = { height: 700, width: 450 };\n\nexport function storageAvailable(type: \"localStorage\" | \"sessionStorage\"): boolean {\n  let storage: Storage;\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return (\n      e &&\n      // everything except Firefox\n      (e.code === 22 ||\n        // Firefox\n        e.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        e.name === \"QuotaExceededError\" ||\n        // Firefox\n        e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storage &&\n      storage.length !== 0\n    );\n  }\n}\n\n/**\n * popup handler utils\n */\nexport function getPopupFeatures({ width: w, height: h }: { width: number; height: number }): string {\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n    ? document.documentElement.clientWidth\n    : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n    ? document.documentElement.clientHeight\n    : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n","import { createLoggerMiddleware } from \"@toruslabs/base-controllers\";\nimport {\n  createIdRemapMiddleware,\n  createStreamMiddleware,\n  getRpcPromiseCallback,\n  JRPCEngine,\n  JRPCRequest,\n  JRPCResponse,\n  ObjectMultiplex,\n  RequestArguments,\n  SafeEventEmitter,\n  SafeEventEmitterProvider,\n  SendCallBack,\n  Stream,\n} from \"@toruslabs/openlogin-jrpc\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport { isDuplexStream } from \"is-stream\";\nimport pump from \"pump\";\nimport type { Duplex } from \"readable-stream\";\n\nimport { BaseProviderState, Maybe, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport messages from \"./messages\";\nimport { createErrorMiddleware, logStreamDisconnectWarning } from \"./utils\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nabstract class BaseProvider<U extends BaseProviderState> extends SafeEventEmitter implements SafeEventEmitterProvider {\n  _rpcEngine: JRPCEngine;\n\n  jsonRpcConnectionEvents: SafeEventEmitter;\n\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  public readonly isTorus: true;\n\n  protected _state: U;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super();\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    // this.enable = this.enable.bind(this);\n\n    // setup connectionStream multiplexing\n    const mux = new ObjectMultiplex();\n    pump(\n      connectionStream as unknown as Stream,\n      mux as unknown as Stream,\n      connectionStream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus\")\n    );\n\n    // ignore phishing warning message (handled elsewhere)\n    mux.ignoreStream(\"phishing\");\n\n    // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(\n      jsonRpcConnection.stream as unknown as Stream,\n      mux.createStream(jsonRpcStreamName) as unknown as Stream,\n      jsonRpcConnection.stream as unknown as Stream,\n      this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")\n    );\n\n    // handle RPC requests via dapp-side rpc engine\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({ origin: location.origin }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request<T, P>(args: RequestArguments<T>): Promise<Maybe<P>> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args,\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args,\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({ method, params }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  send<T, V>(req: JRPCRequest<T>, callback: SendCallBack<V>): void;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  send(payload: JRPCRequest<unknown>, callback: (error: Error | null, result?: JRPCResponse<unknown>) => void): void {\n    this._rpcRequest(payload, callback);\n  }\n\n  sendAsync<T, V>(req: JRPCRequest<T>): Promise<V>;\n\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param cb - The callback function.\n   */\n  sendAsync(payload: JRPCRequest<unknown>): Promise<unknown> {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleStreamDisconnect(streamName: string, error: Error): void {\n    logStreamDisconnectWarning(streamName, error, this);\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  abstract _initializeState(...args: unknown[]): Promise<void>;\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected abstract _rpcRequest(\n    payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[],\n    callback: (...args: unknown[]) => void,\n    isInternal?: boolean\n  ): void;\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInPageProvider#connect\n   */\n  protected abstract _handleConnect(...args: unknown[]): void;\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected abstract _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void;\n}\n\nexport default BaseProvider;\n","export const handleEvent = (handle: EventTarget, eventName: string, handler: (...args: unknown[]) => void, ...handlerArgs: unknown[]): void => {\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nexport async function documentReady(): Promise<void> {\n  return new Promise<void>((resolve) => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nexport const htmlToElement = <T extends Element>(html: string): T => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild as T;\n};\n","import { SafeEventEmitter } from \"@toruslabs/openlogin-jrpc\";\n\nimport { FEATURES_DEFAULT_POPUP_WINDOW, getPopupFeatures } from \"./utils\";\n\nclass PopupHandler extends SafeEventEmitter {\n  url: URL;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  constructor({ url, target, features }: { url: URL; target?: string; features?: string }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          if (!this.iClosedWindow) {\n            this.emit(\"close\");\n          }\n          this.iClosedWindow = false;\n          this.window = undefined;\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): Promise<void> {\n    this.window = window.open(this.url.href, this.target, this.features);\n    if (this.window?.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n}\n\nexport default PopupHandler;\n","import { COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, CommunicationWalletProviderState } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, RequestArguments } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport {\n  BUTTON_POSITION,\n  CommunicationProviderState,\n  EMBED_TRANSLATION_ITEM,\n  LOGIN_PROVIDER_TYPE,\n  ProviderOptions,\n  UnValidatedJsonRpcRequest,\n} from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\nimport PopupHandler from \"./PopupHandler\";\nimport { FEATURES_CONFIRM_WINDOW, getPopupFeatures, getUserLanguage } from \"./utils\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param  opts - An options bag\n */\nclass TorusCommunicationProvider extends BaseProvider<CommunicationProviderState> {\n  protected static _defaultState: CommunicationProviderState = {\n    buttonPosition: \"bottom-left\",\n    currentLoginProvider: null,\n    isIFrameFullScreen: false,\n    hasEmittedConnection: false,\n\n    torusWidgetVisibility: false,\n    initialized: false,\n    isLoggedIn: false,\n    isPermanentlyDisconnected: false,\n    isConnected: false,\n  };\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  public embedTranslations: EMBED_TRANSLATION_ITEM;\n\n  public torusUrl: string;\n\n  public dappStorageKey: string;\n\n  public windowRefs: Record<string, PopupHandler>;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusIframe: HTMLIFrameElement;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusCommunicationProvider._defaultState,\n    };\n\n    // public state\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {};\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = (payload: RequestArguments<unknown>) => {\n      const { method, params } = payload;\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const { isFullScreen, rid } = params as Record<string, unknown>;\n        this._displayIframe({ isFull: isFullScreen as boolean, rid: rid as string });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const { windowId, url } = params as Record<string, string>;\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params as Record<string, unknown>);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const { currentLoginProvider } = params as Record<string, unknown>;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider as LOGIN_PROVIDER_TYPE;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn(): boolean {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen(): boolean {\n    return this._state.isIFrameFullScreen;\n  }\n\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params: Record<string, unknown>): Promise<void> {\n    try {\n      const { torusUrl, dappStorageKey, torusAlertContainer, torusIframe } = params;\n      this.torusUrl = torusUrl as string;\n      this.dappStorageKey = dappStorageKey as string;\n      this.torusAlertContainer = torusAlertContainer as HTMLDivElement;\n      this.torusIframe = torusIframe as HTMLIFrameElement;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const { currentLoginProvider, isLoggedIn } = (await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as CommunicationWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId: string, { url, target, features }: { url?: string; target?: string; features?: string } = {}): void {\n    const finalUrl = new URL(url || `${this.torusUrl}/redirect?windowId=${windowId}`);\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += `&dappStorageKey=${this.dappStorageKey}`;\n      else finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    const handledWindow = new PopupHandler({ url: finalUrl, target, features });\n    handledWindow.open();\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n      return;\n    }\n    // Add to collection only if window is opened\n    this.windowRefs[windowId] = handledWindow;\n    // We tell the iframe that the window has been successfully opened\n    this.request<{ windowId: string }, void>({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: { windowId },\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request<{ windowId: string }, void>({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: { windowId },\n      });\n    });\n  }\n\n  _displayIframe({ isFull = false, rid = \"\" }: { isFull?: boolean; rid?: string } = {}): void {\n    const style: Partial<CSSStyleDeclaration> = {};\n    // set phase\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request<{ isIFrameFullScreen: boolean; rid?: string }, void>({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: { isIFrameFullScreen: isFull, rid },\n    });\n  }\n\n  hideTorusButton(): void {\n    this._state.torusWidgetVisibility = false;\n    this._displayIframe();\n  }\n\n  showTorusButton(): void {\n    this._state.torusWidgetVisibility = true;\n    this._displayIframe();\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  protected _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void): void {\n    const cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n    this.tryWindowHandle(_payload as JRPCRequest<unknown>[], cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(currentLoginProvider: string, isLoggedIn: boolean): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { currentLoginProvider, isLoggedIn });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  // Called if the iframe wants to close the window cause it is done processing the request\n  private _handleCloseWindow(params: { windowId?: string }): void {\n    const { windowId } = params;\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  private async _createPopupBlockAlert(windowId: string, url: string): Promise<void> {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement<HTMLDivElement>(\n      '<div id=\"torusAlert\" class=\"torus-alert--v2\">' +\n        `<div id=\"torusAlert__logo\"><img src=\"${logoUrl}\" /></div>` +\n        \"<div>\" +\n        `<h1 id=\"torusAlert__title\">${this.embedTranslations.actionRequired}</h1>` +\n        `<p id=\"torusAlert__desc\">${this.embedTranslations.pendingAction}</p>` +\n        \"</div>\" +\n        \"</div>\"\n    );\n\n    const successAlert = htmlToElement(`<div><a id=\"torusAlert__btn\">${this.embedTranslations.continue}</a></div>`);\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  private getLogoUrl(): string {\n    const logoUrl = `${this.torusUrl}/images/torus_icon-blue.svg`;\n    return logoUrl;\n  }\n}\n\nexport default TorusCommunicationProvider;\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fast-deep-equal\");","import { InPageWalletProviderState, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from \"@toruslabs/base-controllers\";\nimport { JRPCRequest, JRPCSuccess, RequestArguments } from \"@toruslabs/openlogin-jrpc\";\nimport { EthereumRpcError } from \"eth-rpc-errors\";\nimport dequal from \"fast-deep-equal\";\nimport type { Duplex } from \"readable-stream\";\n\nimport BaseProvider from \"./baseProvider\";\nimport { InPageProviderState, ProviderOptions, UnValidatedJsonRpcRequest } from \"./interfaces\";\nimport log from \"./loglevel\";\nimport messages from \"./messages\";\n\n/**\n * @param connectionStream - A Node.js duplex stream\n * @param opts - An options bag\n */\nclass TorusInPageProvider extends BaseProvider<InPageProviderState> {\n  protected static _defaultState: InPageProviderState = {\n    accounts: null,\n    isConnected: false,\n    isUnlocked: false,\n    initialized: false,\n    isPermanentlyDisconnected: false,\n    hasEmittedConnection: false,\n  };\n\n  /**\n   * The chain ID of the currently connected xrpl chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n  public chainId: string | null;\n\n  /**\n   * The user's currently selected xrpl address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  public selectedAddress: string | null;\n\n  tryWindowHandle: (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: unknown[]) => void) => void;\n\n  constructor(connectionStream: Duplex, { maxEventListeners = 100, jsonRpcStreamName = \"provider\" }: ProviderOptions) {\n    super(connectionStream, { maxEventListeners, jsonRpcStreamName });\n\n    // private state\n    this._state = {\n      ...TorusInPageProvider._defaultState,\n    };\n\n    // public state\n    this.selectedAddress = null;\n    this.chainId = null;\n\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n\n    // setup own event listeners\n\n    // EIP-1193 connect\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = (payload: RequestArguments<unknown>) => {\n      const { method, params } = payload;\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params as unknown[]);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params as Record<string, unknown>);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params as Record<string, unknown>);\n      }\n    };\n\n    // json rpc notification listener\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n  isConnected(): boolean {\n    return this._state.isConnected;\n  }\n\n  // Private Methods\n  //= ===================\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n  async _initializeState(): Promise<void> {\n    try {\n      const { accounts, chainId, isUnlocked } = (await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: [],\n      })) as InPageWalletProviderState;\n\n      // indicate that we've connected, for EIP-1193 compliance\n      this.emit(\"connect\", { chainId });\n\n      this._handleChainChanged({ chainId });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n  _rpcRequest(payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], callback: (...args: unknown[]) => void, isInternal = false): void {\n    let cb = callback;\n    const _payload = payload;\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"xrpl_getAccounts\") {\n        // handle accounts changing\n        cb = (err: Error, res: JRPCSuccess<string[]>) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"xrpl_getAccounts\", isInternal);\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload as JRPCRequest<unknown>, cb);\n        return;\n      }\n    }\n    this.tryWindowHandle(_payload, cb);\n  }\n\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n  protected _handleConnect(chainId: string): void {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n  protected _handleDisconnect(isRecoverable: boolean, errorMessage?: string): void {\n    if (this._state.isConnected || (!this._state.isPermanentlyDisconnected && !isRecoverable)) {\n      this._state.isConnected = false;\n\n      let error: Error;\n      if (isRecoverable) {\n        error = new EthereumRpcError(\n          1013, // Try again later\n          errorMessage || messages.errors.disconnected()\n        );\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(\n          1011, // Internal error\n          errorMessage || messages.errors.permanentlyDisconnected()\n        );\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n\n  /**\n   * Called when accounts may have changed.\n   */\n  protected _handleAccountsChanged(accounts: unknown[], isEthAccounts = false, isInternal = false): void {\n    // defensive programming\n    let finalAccounts = accounts;\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    }\n\n    // emit accountsChanged if anything about the accounts array has changed\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before xrpl_getAccounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"xrpl_getAccounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts as string[];\n      this.emit(\"accountsChanged\", finalAccounts);\n    }\n\n    // handle selectedAddress\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = (finalAccounts[0] as string) || null;\n    }\n  }\n\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n  protected _handleChainChanged({ chainId }: { chainId?: string } = {}): void {\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", { chainId });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n  protected _handleUnlockStateChanged({ accounts, isUnlocked }: { accounts?: string[]; isUnlocked?: boolean } = {}): void {\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", { isUnlocked });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n}\n\nexport default TorusInPageProvider;\n","/**\n * Returns whether the given image URL exists\n * @param url - the url of the image\n * @returns whether the image exists\n */\nfunction imgExists(url: string): Promise<boolean> {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\n/**\n * Extracts a name for the site from the DOM\n */\nconst getSiteName = (window: Window): string => {\n  const { document } = window;\n\n  const siteName = document.querySelector<HTMLMetaElement>('head > meta[property=\"og:site_name\"]');\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector<HTMLMetaElement>('head > meta[name=\"title\"]');\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n\n/**\n * Extracts an icon for the site from the DOM\n */\nasync function getSiteIcon(window: Window): Promise<string> {\n  try {\n    const { document } = window;\n\n    // Use the site's favicon if it exists\n    let icon = document.querySelector<HTMLLinkElement>('head > link[rel=\"shortcut icon\"]');\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    // Search through available icons in no particular order\n    icon = Array.from(document.querySelectorAll<HTMLLinkElement>('head > link[rel=\"icon\"]')).find((_icon) => Boolean(_icon.href));\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n\n/**\n * Gets site metadata and returns it\n *\n */\nconst getSiteMetadata = async (): Promise<{ name: string; icon: string }> => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window),\n});\n\nexport default getSiteMetadata;\n","import { COMMUNICATION_JRPC_METHODS } from \"@toruslabs/base-controllers\";\nimport { setAPIKey } from \"@toruslabs/http-helpers\";\nimport { BasePostMessageStream, getRpcPromiseCallback, JRPCRequest } from \"@toruslabs/openlogin-jrpc\";\n\nimport {\n  BUTTON_POSITION,\n  LOGIN_PROVIDER_TYPE,\n  NetworkInterface,\n  PAYMENT_PROVIDER_TYPE,\n  PaymentParams,\n  SignMessageParams,\n  TORUS_BUILD_ENV,\n  TorusCtorArgs,\n  TorusParams,\n  TransactionJSONType,\n  UnValidatedJsonRpcRequest,\n  UserInfo,\n  WALLET_PATH,\n} from \".//interfaces\";\nimport TorusCommunicationProvider from \"./communicationProvider\";\nimport configuration from \"./config\";\nimport { documentReady, htmlToElement } from \"./embedUtils\";\nimport TorusInPageProvider from \"./inPageProvider\";\nimport log from \"./loglevel\";\nimport PopupHandler from \"./PopupHandler\";\nimport getSiteMetadata from \"./siteMetadata\";\nimport {\n  FEATURES_CONFIRM_WINDOW,\n  FEATURES_DEFAULT_WALLET_WINDOW,\n  FEATURES_PROVIDER_CHANGE_WINDOW,\n  getPopupFeatures,\n  getTorusUrl,\n  getWindowId,\n  storageAvailable,\n} from \"./utils\";\n\nconst PROVIDER_UNSAFE_METHODS = [\"xrpl_signTransaction\", \"xrpl_submitTransaction\", \"xrpl_signMessage\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\n\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\");\n\n// preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const { torusUrl } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = `${torusUrl}/frame`;\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  isInitialized: boolean;\n\n  torusAlert: HTMLDivElement;\n\n  modalZIndex: number;\n\n  alertZIndex: number;\n\n  public requestedLoginProvider?: LOGIN_PROVIDER_TYPE;\n\n  provider: TorusInPageProvider;\n\n  communicationProvider: TorusCommunicationProvider;\n\n  dappStorageKey: string;\n\n  private torusAlertContainer: HTMLDivElement;\n\n  private torusUrl: string;\n\n  private torusIframe: HTMLIFrameElement;\n\n  private styleLink: HTMLLinkElement;\n\n  constructor({ modalZIndex = 99999 }: TorusCtorArgs = {}) {\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  async init({\n    buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n    enableLogging = false,\n    network,\n    showTorusButton = false,\n    useLocalStorage = false,\n    buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n    apiKey = \"torus-default\",\n  }: TorusParams = {}): Promise<void> {\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const { torusUrl, logLevel } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();\n    else log.disableAll();\n\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";\n    else torusIframeUrl.pathname += \"/frame\";\n\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n\n    torusIframeUrl.hash = hashParams.toString();\n\n    // Iframe code\n    this.torusIframe = htmlToElement<HTMLIFrameElement>(\n      `<iframe\n        id=\"torusIframe\"\n        class=\"torusIframe\"\n        src=\"${torusIframeUrl.href}\"\n        style=\"display: none; position: fixed; top: 0; right: 0; width: 100%;\n        height: 100%; border: none; border-radius: 0; z-index: ${this.modalZIndex.toString()}\"\n      ></iframe>`\n    );\n\n    this.torusAlertContainer = htmlToElement<HTMLDivElement>(\n      `<div id=\"torusAlertContainer\" style=\"display:none; z-index: ${this.alertZIndex.toString()}\"></div>`\n    );\n\n    this.styleLink = htmlToElement<HTMLLinkElement>(`<link href=\"${torusUrl}/css/widget.css\" rel=\"stylesheet\" type=\"text/css\">`);\n\n    const handleSetup = () => {\n      return new Promise<void>((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata();\n            // send init params here\n            this.torusIframe.contentWindow.postMessage(\n              {\n                buttonPosition,\n                apiKey,\n                network,\n                dappMetadata,\n              },\n              torusIframeUrl.origin\n            );\n            await this._setupWeb3({\n              torusUrl,\n            });\n            if (showTorusButton) this.showTorusButton();\n            else this.hideTorusButton();\n            this.isInitialized = true;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login(params: { loginProvider?: LOGIN_PROVIDER_TYPE; login_hint?: string } = {}): Promise<string[]> {\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({ isFull: true });\n      }\n\n      // If user is already logged in, we assume they have given access to the website\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest(\n          { method: \"xrpl_getAccounts\", params: [this.requestedLoginProvider, params.login_hint] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      }\n      // This would never happen, but just in case\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      this.communicationProvider._displayIframe({ isFull: false });\n    }\n  }\n\n  async logout(): Promise<void> {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: [],\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp(): Promise<void> {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n    this.clearInit();\n  }\n\n  clearInit(): void {\n    function isElement(element: unknown) {\n      return element instanceof Element || element instanceof Document;\n    }\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n    this.isInitialized = false;\n  }\n\n  hideTorusButton(): void {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton(): void {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params: NetworkInterface): Promise<void> {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: { ...params },\n    });\n  }\n\n  async showWallet(path: WALLET_PATH, params: Record<string, string> = {}): Promise<void> {\n    const instanceId = await this.communicationProvider.request<[], string>({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: [],\n    });\n    const finalPath = path ? `/${path}` : \"\";\n\n    const finalUrl = new URL(`${this.torusUrl}/wallet${finalPath}`);\n    // Using URL constructor to prevent js injection and allow parameter validation.!\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach((x) => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n    if (this.dappStorageKey) {\n      finalUrl.hash = `#dappStorageKey=${this.dappStorageKey}`;\n    }\n    // No need to track this window state. Hence, no _handleWindow call.\n    const walletWindow = new PopupHandler({ url: finalUrl, features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW) });\n    walletWindow.open();\n  }\n\n  async getUserInfo(): Promise<UserInfo> {\n    const userInfoResponse = await this.communicationProvider.request<[], UserInfo>({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: [],\n    });\n    return userInfoResponse as UserInfo;\n  }\n\n  async initiateTopup(provider: PAYMENT_PROVIDER_TYPE, params: PaymentParams): Promise<boolean> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n    this.communicationProvider._handleWindow(windowId);\n    const topupResponse = await this.communicationProvider.request<\n      { provider: PAYMENT_PROVIDER_TYPE; params: PaymentParams; windowId: string },\n      boolean\n    >({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: { provider, params, windowId },\n    });\n    return topupResponse;\n  }\n\n  async signMessage(params: SignMessageParams): Promise<{ signature: string }> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const signMessageRes = await this.provider.request<SignMessageParams, { signature: string }>({\n      method: \"xrpl_signMessage\",\n      params: { ...params },\n    });\n    return signMessageRes as { signature: string };\n  }\n\n  async signTransaction(params: { transaction: TransactionJSONType; txOptions?: Record<string, unknown> }): Promise<{ signedTxBlob: string }> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const signMessageRes = await this.provider.request<TransactionJSONType, { signedTxBlob: string }>({\n      method: \"xrpl_signTransaction\",\n      params: { ...params },\n    });\n    return signMessageRes as { signedTxBlob: string };\n  }\n\n  async submitTransaction(params: { transaction: TransactionJSONType; txOptions?: Record<string, unknown> }): Promise<{ txHash: string }> {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const signMessageRes = await this.provider.request<TransactionJSONType, { txHash: string }>({\n      method: \"xrpl_submitTransaction\",\n      params: { ...params },\n    });\n    return signMessageRes as { txHash: string };\n  }\n\n  private async _setupWeb3(providerParams: { torusUrl: string }): Promise<void> {\n    log.info(\"setupWeb3 running\");\n    // setup background connection\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: providerParams.torusUrl,\n    });\n\n    // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow,\n      targetOrigin: providerParams.torusUrl,\n    });\n\n    // compose the inPage provider\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload: UnValidatedJsonRpcRequest | UnValidatedJsonRpcRequest[], cb: (...args: any[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW),\n        });\n        // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n        _payload.windowId = windowId;\n      }\n      inPageProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>[], cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload: JRPCRequest<unknown>, cb: (...args: any[]) => void) => {\n      const _payload = payload;\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW), // todo: are these features generic for all\n        });\n        // for communication methods sending window id in jrpc req params\n        (_payload.params as Record<string, unknown>).windowId = windowId;\n      }\n      communicationProvider._rpcEngine.handle(_payload as JRPCRequest<unknown>, cb);\n    };\n\n    // detect xrpl_getAccounts and pipe to enable for now\n    const detectAccountRequestPrototypeModifier = (m) => {\n      const originalMethod = inPageProvider[m];\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const self = this;\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const { method, params = [] } = request;\n        if (method === \"xrpl_getAccounts\") {\n          if (!cb) return self.login({ loginProvider: params[0] });\n          self\n            .login({ loginProvider: params[0] })\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .then((res) => cb(null, res))\n            // eslint-disable-next-line promise/no-callback-in-promise\n            .catch((err) => cb(err));\n        }\n        return originalMethod.apply(this, [request, cb]);\n      };\n    };\n\n    // Detects call to xrpl_getAccounts in request & sendAsync and passes to login\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n\n    await Promise.all([\n      inPageProvider._initializeState(),\n      communicationProvider._initializeState({\n        ...providerParams,\n        dappStorageKey: this.dappStorageKey,\n        torusAlertContainer: this.torusAlertContainer,\n        torusIframe: this.torusIframe,\n      }),\n    ]);\n    log.debug(\"Torus - injected provider\");\n  }\n\n  private handleDappStorageKey(useLocalStorage: boolean) {\n    let dappStorageKey = \"\";\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;\n      else {\n        const generatedKey = `torus-app-${getWindowId()}`;\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n}\n\nexport default Torus;\n","export { default } from \"./embed\";\nexport { default as TorusInPageProvider } from \"./inPageProvider\";\nexport * from \"./interfaces\";\n"],"names":["TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","ethErrors","config","log","createErrorMiddleware","req","res","next","error","rpc","invalidRequest","message","data","done","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","NOOP","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","_ref","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","createLoggerMiddleware","createIdRemapMiddleware","createStreamMiddleware","getRpcPromiseCallback","JRPCEngine","ObjectMultiplex","SafeEventEmitter","isDuplexStream","pump","messages","BaseProvider","constructor","connectionStream","jsonRpcStreamName","_defineProperty","Error","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ignoreStream","jsonRpcConnection","stream","createStream","rpcEngine","push","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","send","payload","callback","streamName","handleEvent","handle","eventName","handler","_len","arguments","handlerArgs","_key","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","focus","close","redirect","locationReplaceOnRedirect","replace","COMMUNICATION_JRPC_METHODS","COMMUNICATION_NOTIFICATIONS","EthereumRpcError","configuration","TorusCommunicationProvider","_state","_objectSpread","_defaultState","dappStorageKey","languageTranslations","embedTranslations","windowRefs","on","isConnected","notificationHandler","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","PROVIDER_JRPC_METHODS","PROVIDER_NOTIFICATIONS","dequal","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","isInternal","err","result","isEthAccounts","finalAccounts","account","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","setAPIKey","BasePostMessageStream","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","init","enableLogging","network","useLocalStorage","apiKey","setDefaultLevel","enableAll","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","login","loginProvider","communicationProvider","provider","login_hint","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","signMessage","signMessageRes","signTransaction","submitTransaction","providerParams","providerStream","targetWindow","targetOrigin","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all","storedKey","localStorage","getItem","generatedKey","default"],"sourceRoot":""}